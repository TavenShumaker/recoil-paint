{"ast":null,"code":"var _jsxFileName = \"/Users/jesusvargas/Documents/GitHub/recoil-paint/src/components/sidebar/AddRectsButton.js\";\nimport React from 'react';\nimport { StyleSheet, Text } from 'react-native-web';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\nimport Button from '../common/Button';\nimport { itemIdsState, selectedIdsState } from '../../recoil/atoms';\nimport { createNewShape } from '../../recoil/defaults';\nexport default function AddRectsButton() {\n  const [itemIds, setItemIds] = useRecoilState(itemIdsState);\n  const setSelectedIds = useSetRecoilState(selectedIdsState);\n\n  const handleClick = () => {\n    let space = 16;\n    let width = 100;\n    let height = 100;\n    let ids = [];\n    let start = itemIds.length;\n\n    for (let i = 0; i < 100; i++) {\n      let count = start + i;\n      let row = Math.floor(count / 5);\n      let col = count % 5;\n      let x = space * (col + 1) + width * col;\n      let y = space * (row + 1) + height * row;\n      let id = createNewShape({\n        x,\n        y,\n        width,\n        height\n      });\n      ids.push(id);\n    }\n\n    setItemIds([...itemIds, ...ids]);\n    setSelectedIds([]);\n  };\n\n  return /*#__PURE__*/React.createElement(Button, {\n    style: styles.root,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Add 100 Rects\"));\n}\nconst styles = StyleSheet.create({\n  root: {\n    backgroundColor: '#12850b'\n  },\n  text: {\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["/Users/jesusvargas/Documents/GitHub/recoil-paint/src/components/sidebar/AddRectsButton.js"],"names":["React","StyleSheet","Text","useRecoilState","useSetRecoilState","Button","itemIdsState","selectedIdsState","createNewShape","AddRectsButton","itemIds","setItemIds","setSelectedIds","handleClick","space","width","height","ids","start","length","i","count","row","Math","floor","col","x","y","id","push","styles","root","text","create","backgroundColor","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,QAAlD;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,YAAT,EAAuBC,gBAAvB,QAA+C,oBAA/C;AACA,SAASC,cAAT,QAA+B,uBAA/B;AAEA,eAAe,SAASC,cAAT,GAA0B;AACvC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,cAAc,CAACG,YAAD,CAA5C;AACA,QAAMM,cAAc,GAAGR,iBAAiB,CAACG,gBAAD,CAAxC;;AAEA,QAAMM,WAAW,GAAG,MAAM;AACxB,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,KAAK,GAAG,GAAZ;AACA,QAAIC,MAAM,GAAG,GAAb;AACA,QAAIC,GAAG,GAAG,EAAV;AACA,QAAIC,KAAK,GAAGR,OAAO,CAACS,MAApB;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,GAAhB,EAAqBA,CAAC,EAAtB,EAA0B;AACxB,UAAIC,KAAK,GAAGH,KAAK,GAAGE,CAApB;AACA,UAAIE,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,GAAG,CAAnB,CAAV;AACA,UAAII,GAAG,GAAGJ,KAAK,GAAG,CAAlB;AACA,UAAIK,CAAC,GAAGZ,KAAK,IAAIW,GAAG,GAAG,CAAV,CAAL,GAAoBV,KAAK,GAAGU,GAApC;AACA,UAAIE,CAAC,GAAGb,KAAK,IAAIQ,GAAG,GAAG,CAAV,CAAL,GAAoBN,MAAM,GAAGM,GAArC;AACA,UAAIM,EAAE,GAAGpB,cAAc,CAAC;AAAEkB,QAAAA,CAAF;AAAKC,QAAAA,CAAL;AAAQZ,QAAAA,KAAR;AAAeC,QAAAA;AAAf,OAAD,CAAvB;AACAC,MAAAA,GAAG,CAACY,IAAJ,CAASD,EAAT;AACD;;AAEDjB,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAa,GAAGO,GAAhB,CAAD,CAAV;AACAL,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAlBD;;AAqBA,sBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEkB,MAAM,CAACC,IAAtB;AAA4B,IAAA,OAAO,EAAElB,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEiB,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF;AAKD;AAED,MAAMF,MAAM,GAAG7B,UAAU,CAACgC,MAAX,CAAkB;AAC/BF,EAAAA,IAAI,EAAE;AACJG,IAAAA,eAAe,EAAE;AADb,GADyB;AAI/BF,EAAAA,IAAI,EAAE;AACJG,IAAAA,KAAK,EAAE;AADH;AAJyB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text } from 'react-native-web';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\nimport Button from '../common/Button';\nimport { itemIdsState, selectedIdsState } from '../../recoil/atoms';\nimport { createNewShape } from '../../recoil/defaults';\n\nexport default function AddRectsButton() {\n  const [itemIds, setItemIds] = useRecoilState(itemIdsState);\n  const setSelectedIds = useSetRecoilState(selectedIdsState);\n\n  const handleClick = () => {\n    let space = 16;\n    let width = 100;\n    let height = 100;\n    let ids = [];\n    let start = itemIds.length;\n    for (let i=0; i<100; i++) {\n      let count = start + i;\n      let row = Math.floor(count / 5);\n      let col = count % 5;\n      let x = space * (col + 1) + width * col;\n      let y = space * (row + 1) + height * row;\n      let id = createNewShape({ x, y, width, height });\n      ids.push(id);\n    }\n\n    setItemIds([...itemIds, ...ids]);\n    setSelectedIds([]);\n  }\n\n\n  return (\n    <Button style={styles.root} onClick={handleClick}>\n      <Text style={styles.text}>Add 100 Rects</Text>\n    </Button>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    backgroundColor: '#12850b'\n  },\n  text: {\n    color: 'white',\n  }\n})\n"]},"metadata":{},"sourceType":"module"}