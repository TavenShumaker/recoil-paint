{"ast":null,"code":"var _jsxFileName = \"/Users/jesusvargas/Documents/GitHub/recoil-paint/src/components/shapes/Statistics.js\";\nimport React, { useEffect } from 'react';\nimport { StyleSheet, View, ActivityIndicator } from 'react-native-web';\nimport { useSetRecoilState, useRecoilValueLoadable } from 'recoil';\nimport Element from './Element';\nimport { itemWithId, statisticsQuery } from '../../recoil/selectors';\nexport default function Statistics({\n  id,\n  series,\n  status,\n  ...others\n}) {\n  const setItemState = useSetRecoilState(itemWithId(id));\n  const statisticsLoadable = useRecoilValueLoadable(statisticsQuery(id));\n  useEffect(() => {\n    if (statisticsLoadable.state === 'hasValue') {\n      setItemState(item => ({ ...item,\n        ...statisticsLoadable.contents,\n        status: 'loaded'\n      }));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [statisticsLoadable.state]);\n  let content;\n\n  if (status === 'loading') {\n    content = /*#__PURE__*/React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }\n    });\n  } else {\n    content = /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, series.map((serie, i) => /*#__PURE__*/React.createElement(View, {\n      key: `serie-${i}`,\n      style: [styles.bar, {\n        height: serie * 100\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(Element, Object.assign({}, others, {\n    style: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }), content);\n}\nconst styles = StyleSheet.create({\n  root: {},\n  container: {\n    flexDirection: 'row',\n    paddingVertical: 8,\n    paddingHorizontal: 4,\n    alignItems: 'flex-end'\n  },\n  bar: {\n    marginHorizontal: 4,\n    backgroundColor: '#1189c7',\n    width: 20\n  }\n});","map":{"version":3,"sources":["/Users/jesusvargas/Documents/GitHub/recoil-paint/src/components/shapes/Statistics.js"],"names":["React","useEffect","StyleSheet","View","ActivityIndicator","useSetRecoilState","useRecoilValueLoadable","Element","itemWithId","statisticsQuery","Statistics","id","series","status","others","setItemState","statisticsLoadable","state","item","contents","content","styles","container","map","serie","i","bar","height","root","create","flexDirection","paddingVertical","paddingHorizontal","alignItems","marginHorizontal","backgroundColor","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,iBAA3B,QAAoD,kBAApD;AACA,SAASC,iBAAT,EAA4BC,sBAA5B,QAA0D,QAA1D;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,wBAA5C;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,MAAN;AAAcC,EAAAA,MAAd;AAAsB,KAAGC;AAAzB,CAApB,EAAuD;AACpE,QAAMC,YAAY,GAAGV,iBAAiB,CAACG,UAAU,CAACG,EAAD,CAAX,CAAtC;AACA,QAAMK,kBAAkB,GAAGV,sBAAsB,CAACG,eAAe,CAACE,EAAD,CAAhB,CAAjD;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,kBAAkB,CAACC,KAAnB,KAA6B,UAAjC,EAA6C;AAC3CF,MAAAA,YAAY,CAACG,IAAI,KAAK,EACpB,GAAGA,IADiB;AAEpB,WAAGF,kBAAkB,CAACG,QAFF;AAGpBN,QAAAA,MAAM,EAAE;AAHY,OAAL,CAAL,CAAZ;AAKD,KAPa,CAQhB;;AACC,GATQ,EASN,CAACG,kBAAkB,CAACC,KAApB,CATM,CAAT;AAWA,MAAIG,OAAJ;;AAEA,MAAIP,MAAM,KAAK,SAAf,EAA0B;AACxBO,IAAAA,OAAO,gBAAG,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACD,GAFD,MAEO;AACLA,IAAAA,OAAO,gBACL,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGV,MAAM,CAACW,GAAP,CAAW,CAACC,KAAD,EAAQC,CAAR,kBACV,oBAAC,IAAD;AACE,MAAA,GAAG,EAAG,SAAQA,CAAE,EADlB;AAEE,MAAA,KAAK,EAAE,CACLJ,MAAM,CAACK,GADF,EAEL;AACEC,QAAAA,MAAM,EAAEH,KAAK,GAAG;AADlB,OAFK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF;AAeD;;AAED,sBACE,oBAAC,OAAD,oBACMV,MADN;AAEE,IAAA,KAAK,EAAEO,MAAM,CAACO,IAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIGR,OAJH,CADF;AAQD;AAED,MAAMC,MAAM,GAAGnB,UAAU,CAAC2B,MAAX,CAAkB;AAC/BD,EAAAA,IAAI,EAAE,EADyB;AAE/BN,EAAAA,SAAS,EAAE;AACTQ,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,eAAe,EAAE,CAFR;AAGTC,IAAAA,iBAAiB,EAAE,CAHV;AAITC,IAAAA,UAAU,EAAE;AAJH,GAFoB;AAQ/BP,EAAAA,GAAG,EAAE;AACHQ,IAAAA,gBAAgB,EAAE,CADf;AAEHC,IAAAA,eAAe,EAAE,SAFd;AAGHC,IAAAA,KAAK,EAAE;AAHJ;AAR0B,CAAlB,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { StyleSheet, View, ActivityIndicator } from 'react-native-web';\nimport { useSetRecoilState, useRecoilValueLoadable } from 'recoil';\nimport Element from './Element';\nimport { itemWithId, statisticsQuery } from '../../recoil/selectors';\n\nexport default function Statistics({ id, series, status, ...others }) {\n  const setItemState = useSetRecoilState(itemWithId(id));\n  const statisticsLoadable = useRecoilValueLoadable(statisticsQuery(id));\n\n  useEffect(() => {\n    if (statisticsLoadable.state === 'hasValue') {\n      setItemState(item => ({\n        ...item,\n        ...statisticsLoadable.contents,\n        status: 'loaded'\n      }));\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [statisticsLoadable.state]);\n\n  let content;\n\n  if (status === 'loading') {\n    content = <ActivityIndicator size=\"large\" />\n  } else {\n    content = (\n      <View style={styles.container}>\n        {series.map((serie, i) => (\n          <View\n            key={`serie-${i}`}\n            style={[\n              styles.bar,\n              {\n                height: serie * 100,\n              }\n            ]}\n          />\n        ))}\n      </View>\n    )\n  }\n\n  return (\n    <Element\n      {...others}\n      style={styles.root}\n    >\n      {content}\n    </Element>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {},\n  container: {\n    flexDirection: 'row',\n    paddingVertical: 8,\n    paddingHorizontal: 4,\n    alignItems: 'flex-end',\n  },\n  bar: {\n    marginHorizontal: 4,\n    backgroundColor: '#1189c7',\n    width: 20,\n  }\n});\n"]},"metadata":{},"sourceType":"module"}