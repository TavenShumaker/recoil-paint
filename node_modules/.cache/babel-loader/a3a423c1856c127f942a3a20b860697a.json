{"ast":null,"code":"var _jsxFileName = \"/Users/jesusvargas/Documents/GitHub/recoil-paint/src/components/canvas/ResizeHandler.js\";\nimport React, { useState } from 'react';\nimport { View, StyleSheet } from 'react-native-web';\nimport { useRecoilState } from 'recoil';\nimport { selectedItemsSelector } from '../../recoil/selectors';\nimport useMove from '../../hooks/useMove';\n\nfunction resizeItem(item, offset) {\n  let {\n    x,\n    y,\n    width,\n    height\n  } = item;\n  width += offset.x;\n  height += offset.y;\n\n  if (width < 0) {\n    width = -width;\n    x -= width;\n  }\n\n  if (height < 0) {\n    height = -height;\n    y -= height;\n  }\n\n  return { ...item,\n    x,\n    y,\n    width,\n    height\n  };\n}\n\nexport default function ResizeHandler() {\n  const [selectedItems, setSelectedItems] = useRecoilState(selectedItemsSelector);\n  const [selectedItemsSnapshot, setSelectedItemsSnapshot] = useState(null);\n  const {\n    onMouseDown\n  } = useMove(({\n    status,\n    offset\n  }) => {\n    if (status === 'start') {\n      setSelectedItemsSnapshot(selectedItems);\n    }\n\n    if (status === 'moving') {\n      setSelectedItems(selectedItemsSnapshot.map(item => resizeItem(item, offset)));\n    }\n  });\n\n  if (selectedItems.length !== 1 || selectedItems[0].type === 'statistics') {\n    return null;\n  }\n\n  const {\n    x,\n    y,\n    width,\n    height\n  } = selectedItems[0];\n  return /*#__PURE__*/React.createElement(View, {\n    style: [styles.resizeHandler, {\n      left: x + width,\n      top: y + height\n    }],\n    onMouseDown: onMouseDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    style: styles.resizeHandlerDot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n}\nconst styles = StyleSheet.create({\n  resizeHandler: {\n    width: 24,\n    height: 24,\n    marginLeft: -13,\n    marginTop: -13,\n    justifyContent: 'center',\n    alignItems: 'center',\n    cursor: 'nwse-resize'\n  },\n  resizeHandlerDot: {\n    width: 10,\n    height: 10,\n    borderRadius: 4,\n    backgroundColor: 'white',\n    borderWidth: 2,\n    borderColor: 'blue',\n    position: 'absolute'\n  }\n});","map":{"version":3,"sources":["/Users/jesusvargas/Documents/GitHub/recoil-paint/src/components/canvas/ResizeHandler.js"],"names":["React","useState","View","StyleSheet","useRecoilState","selectedItemsSelector","useMove","resizeItem","item","offset","x","y","width","height","ResizeHandler","selectedItems","setSelectedItems","selectedItemsSnapshot","setSelectedItemsSnapshot","onMouseDown","status","map","length","type","styles","resizeHandler","left","top","resizeHandlerDot","create","marginLeft","marginTop","justifyContent","alignItems","cursor","borderRadius","backgroundColor","borderWidth","borderColor","position"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, StyleSheet } from 'react-native-web';\nimport { useRecoilState } from 'recoil';\nimport { selectedItemsSelector } from '../../recoil/selectors';\nimport useMove from '../../hooks/useMove';\n\n\nfunction resizeItem(item, offset) {\n  let { x, y, width, height } = item;\n  width += offset.x;\n  height += offset.y;\n\n  if (width < 0) {\n    width = -width;\n    x -= width;\n  }\n\n  if (height < 0) {\n    height = -height;\n    y -= height;\n  }\n\n  return {\n    ...item,\n    x,\n    y,\n    width,\n    height,\n  };\n}\n\nexport default function ResizeHandler() {\n  const [selectedItems, setSelectedItems] = useRecoilState(selectedItemsSelector);\n  const [selectedItemsSnapshot, setSelectedItemsSnapshot] = useState(null);\n\n  const { onMouseDown } = useMove(({ status, offset }) => {\n    if (status === 'start') {\n      setSelectedItemsSnapshot(selectedItems)\n    }\n\n    if (status === 'moving') {\n      setSelectedItems(selectedItemsSnapshot.map(item => resizeItem(item, offset)));\n    }\n  })\n\n  if (selectedItems.length !== 1 || selectedItems[0].type === 'statistics') {\n    return null;\n  }\n\n  const { x, y, width, height } = selectedItems[0];\n\n  return (\n    <View\n      style={[styles.resizeHandler, {\n        left: x + width,\n        top: y + height,\n      }]}\n      onMouseDown={onMouseDown}\n    >\n      <View style={styles.resizeHandlerDot} />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  resizeHandler: {\n    width: 24,\n    height: 24,\n    marginLeft: -13,\n    marginTop: -13,\n    justifyContent: 'center',\n    alignItems: 'center',\n    cursor: 'nwse-resize',\n  },\n  resizeHandlerDot: {\n    width: 10,\n    height: 10,\n    borderRadius: 4,\n    backgroundColor: 'white',\n    borderWidth: 2,\n    borderColor: 'blue',\n    position: 'absolute',\n  }\n})\n"]},"metadata":{},"sourceType":"module"}