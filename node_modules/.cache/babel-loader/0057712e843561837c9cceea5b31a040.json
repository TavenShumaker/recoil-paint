{"ast":null,"code":"import { useRecoilCallback } from 'recoil';\nimport { itemWithId } from './selectors';\nimport { createNewShape } from './defaults';\nexport function useUpdateItem() {\n  return useRecoilCallback(({\n    set\n  }) => async newValue => {\n    set(itemWithId(newValue.id), newValue);\n  });\n}\nexport function useNewItem() {\n  return useRecoilCallback(({\n    snapshot: {\n      getPromise\n    }\n  }) => async shapeParam => {\n    let id = createNewShape(shapeParam);\n    const item = await getPromise(itemWithId(id));\n    return item;\n  });\n}\nexport function useLoadItems() {\n  return useRecoilCallback(({\n    snapshot: {\n      getPromise\n    }\n  }) => async itemIds => {\n    return await Promise.all(itemIds.map(id => getPromise(itemWithId(id))));\n  }, []);\n}\nexport function useUpdateItems() {\n  return useRecoilCallback(({\n    set\n  }) => async newValue => {\n    newValue.forEach(item => {\n      set(itemWithId(item.id), item);\n    });\n  }, []);\n}","map":{"version":3,"sources":["/Users/jesusvargas/Documents/GitHub/recoil-paint/src/recoil/hooks.js"],"names":["useRecoilCallback","itemWithId","createNewShape","useUpdateItem","set","newValue","id","useNewItem","snapshot","getPromise","shapeParam","item","useLoadItems","itemIds","Promise","all","map","useUpdateItems","forEach"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,QAAlC;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,cAAT,QAA+B,YAA/B;AAEA,OAAO,SAASC,aAAT,GAAyB;AAC9B,SAAOH,iBAAiB,CAAC,CAAC;AAACI,IAAAA;AAAD,GAAD,KAAW,MAAOC,QAAP,IAAoB;AACtDD,IAAAA,GAAG,CAACH,UAAU,CAACI,QAAQ,CAACC,EAAV,CAAX,EAA0BD,QAA1B,CAAH;AACD,GAFuB,CAAxB;AAGD;AAED,OAAO,SAASE,UAAT,GAAsB;AAC3B,SAAOP,iBAAiB,CAAC,CAAC;AAACQ,IAAAA,QAAQ,EAAE;AAACC,MAAAA;AAAD;AAAX,GAAD,KAA8B,MAAOC,UAAP,IAAsB;AAC3E,QAAIJ,EAAE,GAAGJ,cAAc,CAACQ,UAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,UAAU,CAACR,UAAU,CAACK,EAAD,CAAX,CAA7B;AAEA,WAAOK,IAAP;AACD,GALuB,CAAxB;AAMD;AAED,OAAO,SAASC,YAAT,GAAwB;AAC7B,SAAOZ,iBAAiB,CAAC,CAAC;AAACQ,IAAAA,QAAQ,EAAE;AAACC,MAAAA;AAAD;AAAX,GAAD,KAA8B,MAAOI,OAAP,IAAmB;AACxE,WAAO,MAAMC,OAAO,CAACC,GAAR,CACXF,OAAO,CAACG,GAAR,CAAYV,EAAE,IAAIG,UAAU,CAACR,UAAU,CAACK,EAAD,CAAX,CAA5B,CADW,CAAb;AAGD,GAJuB,EAIrB,EAJqB,CAAxB;AAKD;AAED,OAAO,SAASW,cAAT,GAA0B;AAC/B,SAAOjB,iBAAiB,CAAC,CAAC;AAACI,IAAAA;AAAD,GAAD,KAAW,MAAOC,QAAP,IAAoB;AACtDA,IAAAA,QAAQ,CAACa,OAAT,CAAiBP,IAAI,IAAI;AACvBP,MAAAA,GAAG,CAACH,UAAU,CAACU,IAAI,CAACL,EAAN,CAAX,EAAsBK,IAAtB,CAAH;AACD,KAFD;AAGD,GAJuB,EAIrB,EAJqB,CAAxB;AAKD","sourcesContent":["import { useRecoilCallback } from 'recoil';\nimport { itemWithId } from './selectors';\nimport { createNewShape } from './defaults';\n\nexport function useUpdateItem() {\n  return useRecoilCallback(({set}) => async (newValue) => {\n    set(itemWithId(newValue.id), newValue)\n  });\n}\n\nexport function useNewItem() {\n  return useRecoilCallback(({snapshot: {getPromise}}) => async (shapeParam) => {\n    let id = createNewShape(shapeParam);\n    const item = await getPromise(itemWithId(id));\n\n    return item;\n  });\n}\n\nexport function useLoadItems() {\n  return useRecoilCallback(({snapshot: {getPromise}}) => async (itemIds) => {\n    return await Promise.all(\n      itemIds.map(id => getPromise(itemWithId(id)))\n    );\n  }, []);\n}\n\nexport function useUpdateItems() {\n  return useRecoilCallback(({set}) => async (newValue) => {\n    newValue.forEach(item => {\n      set(itemWithId(item.id), item);\n    })\n  }, []);\n}\n"]},"metadata":{},"sourceType":"module"}