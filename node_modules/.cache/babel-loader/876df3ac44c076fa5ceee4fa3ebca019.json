{"ast":null,"code":"import { useEffect, useState, useCallback } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { movingItemIdsState } from '../recoil/atoms';\nimport { useLoadItems, useUpdateItems } from '../recoil/hooks';\nimport useMove from './useMove';\nexport default function useMoveItems(func) {\n  const [movingItemsSnapshot, setMovingItemsSnapshot] = useState([]);\n  const movingItemIds = useRecoilValue(movingItemIdsState);\n  const loadMovingItems = useLoadItems();\n  const updateItemsPosition = useUpdateItems();\n  const updateSnpashot = useCallback(async () => {\n    const items = await loadMovingItems(movingItemIds);\n    setMovingItemsSnapshot(items);\n  }, [loadMovingItems, movingItemIds]);\n  const {\n    onMouseDown\n  } = useMove(params => {\n    const {\n      status,\n      offset\n    } = params;\n    func(params);\n\n    if (status === 'moving' && movingItemsSnapshot.length) {\n      const newMovingItems = movingItemsSnapshot.map(item => {\n        return { ...item,\n          x: item.x + offset.x,\n          y: item.y + offset.y\n        };\n      });\n      updateItemsPosition(newMovingItems);\n    }\n  });\n  useEffect(() => {\n    updateSnpashot();\n  }, [movingItemIds, updateSnpashot]);\n  return {\n    onMouseDown\n  };\n}","map":{"version":3,"sources":["/Users/jesusvargas/Documents/GitHub/recoil-paint/src/hooks/useMoveItems.js"],"names":["useEffect","useState","useCallback","useRecoilValue","movingItemIdsState","useLoadItems","useUpdateItems","useMove","useMoveItems","func","movingItemsSnapshot","setMovingItemsSnapshot","movingItemIds","loadMovingItems","updateItemsPosition","updateSnpashot","items","onMouseDown","params","status","offset","length","newMovingItems","map","item","x","y"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,iBAA7C;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AACzC,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDV,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAMW,aAAa,GAAGT,cAAc,CAACC,kBAAD,CAApC;AAEA,QAAMS,eAAe,GAAGR,YAAY,EAApC;AACA,QAAMS,mBAAmB,GAAGR,cAAc,EAA1C;AAEA,QAAMS,cAAc,GAAGb,WAAW,CAAC,YAAY;AAC7C,UAAMc,KAAK,GAAG,MAAMH,eAAe,CAACD,aAAD,CAAnC;AACAD,IAAAA,sBAAsB,CAACK,KAAD,CAAtB;AACD,GAHiC,EAG/B,CAACH,eAAD,EAAkBD,aAAlB,CAH+B,CAAlC;AAKA,QAAM;AAAEK,IAAAA;AAAF,MAAkBV,OAAO,CAAEW,MAAD,IAAY;AAC1C,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAqBF,MAA3B;AACAT,IAAAA,IAAI,CAACS,MAAD,CAAJ;;AAEA,QAAIC,MAAM,KAAK,QAAX,IAAuBT,mBAAmB,CAACW,MAA/C,EAAuD;AACrD,YAAMC,cAAc,GAAGZ,mBAAmB,CAACa,GAApB,CAAwBC,IAAI,IAAI;AACrD,eAAO,EACL,GAAGA,IADE;AAELC,UAAAA,CAAC,EAAED,IAAI,CAACC,CAAL,GAASL,MAAM,CAACK,CAFd;AAGLC,UAAAA,CAAC,EAAEF,IAAI,CAACE,CAAL,GAASN,MAAM,CAACM;AAHd,SAAP;AAKD,OANsB,CAAvB;AAOAZ,MAAAA,mBAAmB,CAACQ,cAAD,CAAnB;AACD;AACF,GAd8B,CAA/B;AAgBAtB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,cAAc;AACf,GAFQ,EAEN,CAACH,aAAD,EAAgBG,cAAhB,CAFM,CAAT;AAIA,SAAO;AACLE,IAAAA;AADK,GAAP;AAGD","sourcesContent":["import { useEffect, useState, useCallback } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { movingItemIdsState } from '../recoil/atoms';\nimport { useLoadItems, useUpdateItems } from '../recoil/hooks';\nimport useMove from './useMove';\n\nexport default function useMoveItems(func) {\n  const [movingItemsSnapshot, setMovingItemsSnapshot] = useState([]);\n  const movingItemIds = useRecoilValue(movingItemIdsState);\n\n  const loadMovingItems = useLoadItems();\n  const updateItemsPosition = useUpdateItems();\n\n  const updateSnpashot = useCallback(async () => {\n    const items = await loadMovingItems(movingItemIds);\n    setMovingItemsSnapshot(items);\n  }, [loadMovingItems, movingItemIds]);\n\n  const { onMouseDown } = useMove((params) => {\n    const { status, offset } = params;\n    func(params);\n\n    if (status === 'moving' && movingItemsSnapshot.length) {\n      const newMovingItems = movingItemsSnapshot.map(item => {\n        return {\n          ...item,\n          x: item.x + offset.x,\n          y: item.y + offset.y,\n        }\n      });\n      updateItemsPosition(newMovingItems);\n    }\n  });\n\n  useEffect(() => {\n    updateSnpashot();\n  }, [movingItemIds, updateSnpashot]);\n\n  return {\n    onMouseDown\n  }\n}\n"]},"metadata":{},"sourceType":"module"}