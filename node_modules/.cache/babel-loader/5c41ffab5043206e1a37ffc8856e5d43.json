{"ast":null,"code":"var _jsxFileName = \"/Users/jesusvargas/Documents/GitHub/recoil-paint/src/components/infobar/SelectionInfo.js\";\nimport React, { useCallback } from 'react';\nimport { View, StyleSheet, Text, TextInput } from 'react-native-web';\nimport { useRecoilState } from 'recoil';\nimport NumberInput from '../common/NumberInput';\nimport { selectedItemsSelector } from '../../recoil/selectors';\nexport default function SelectionInfo() {\n  const [selectedItems, setSelectedItems] = useRecoilState(selectedItemsSelector);\n  const updateSelectedItem = useCallback((name, value) => {\n    setSelectedItems([{ ...selectedItems[0],\n      [name]: value\n    }]);\n  }, [selectedItems, setSelectedItems]);\n\n  if (selectedItems.length !== 1) {\n    return null;\n  }\n\n  const selectedItem = selectedItems[0];\n  return /*#__PURE__*/React.createElement(View, {\n    style: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"Selection:\")), /*#__PURE__*/React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    style: styles.column,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: styles.bold,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"X\"), /*#__PURE__*/React.createElement(NumberInput, {\n    value: selectedItem.x,\n    style: styles.input,\n    onChangeNumber: number => updateSelectedItem('x', number),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(View, {\n    style: styles.columnSpace,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(View, {\n    style: styles.column,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: styles.bold,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Y\"), /*#__PURE__*/React.createElement(NumberInput, {\n    value: selectedItem.y,\n    style: styles.input,\n    onChangeNumber: number => updateSelectedItem('y', number),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }))), ['image'].indexOf(selectedItem.type) === -1 && /*#__PURE__*/React.createElement(View, {\n    style: styles.labelRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: styles.bold,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"Label:\"), /*#__PURE__*/React.createElement(TextInput, {\n    value: selectedItem.label,\n    style: styles.input,\n    onChangeText: text => updateSelectedItem('label', text),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  })));\n}\nconst styles = StyleSheet.create({\n  root: {},\n  row: {\n    marginBottom: 24,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  labelRow: {},\n  column: {\n    flex: 1\n  },\n  columnSpace: {\n    width: 8\n  },\n  bold: {\n    fontWeight: 'bold'\n  },\n  input: {\n    flex: 1,\n    paddingVertical: 8,\n    paddingHorizontal: 8,\n    backgroundColor: 'white',\n    borderRadius: 4,\n    borderColor: '#d6d8d9',\n    borderWidth: 1,\n    marginTop: 8\n  }\n});","map":{"version":3,"sources":["/Users/jesusvargas/Documents/GitHub/recoil-paint/src/components/infobar/SelectionInfo.js"],"names":["React","useCallback","View","StyleSheet","Text","TextInput","useRecoilState","NumberInput","selectedItemsSelector","SelectionInfo","selectedItems","setSelectedItems","updateSelectedItem","name","value","length","selectedItem","styles","root","row","column","bold","x","input","number","columnSpace","y","indexOf","type","labelRow","label","text","create","marginBottom","flexDirection","alignItems","flex","width","fontWeight","paddingVertical","paddingHorizontal","backgroundColor","borderRadius","borderColor","borderWidth","marginTop"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport { View, StyleSheet, Text, TextInput } from 'react-native-web';\nimport { useRecoilState } from 'recoil';\nimport NumberInput from '../common/NumberInput';\nimport { selectedItemsSelector } from '../../recoil/selectors';\n\nexport default function SelectionInfo() {\n  const [selectedItems, setSelectedItems] = useRecoilState(selectedItemsSelector);\n\n  const updateSelectedItem = useCallback((name, value) => {\n    setSelectedItems([{...selectedItems[0], [name]: value}])\n  }, [selectedItems, setSelectedItems]);\n\n  if (selectedItems.length !== 1) {\n    return null;\n  }\n\n  const selectedItem = selectedItems[0];\n\n\n  return (\n    <View style={styles.root}>\n      <View style={styles.row}>\n        <Text>Selection:</Text>\n      </View>\n      <View style={styles.row}>\n        <View style={styles.column}>\n          <Text style={styles.bold}>X</Text>\n          <NumberInput\n            value={selectedItem.x}\n            style={styles.input}\n            onChangeNumber={number => updateSelectedItem('x', number)}\n          />\n        </View>\n        <View style={styles.columnSpace} />\n        <View style={styles.column}>\n          <Text style={styles.bold}>Y</Text>\n          <NumberInput\n            value={selectedItem.y}\n            style={styles.input}\n            onChangeNumber={number => updateSelectedItem('y', number)}\n          />\n        </View>\n      </View>\n      {['image'].indexOf(selectedItem.type) === -1 && (\n        <View style={styles.labelRow}>\n          <Text style={styles.bold}>Label:</Text>\n          <TextInput\n            value={selectedItem.label}\n            style={styles.input}\n            onChangeText={text => updateSelectedItem('label', text)}\n          />\n        </View>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n  },\n  row: {\n    marginBottom: 24,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  labelRow: {},\n  column: {\n    flex: 1,\n  },\n  columnSpace: {\n    width: 8,\n  },\n  bold: {\n    fontWeight: 'bold'\n  },\n  input: {\n    flex: 1,\n    paddingVertical: 8,\n    paddingHorizontal: 8,\n    backgroundColor: 'white',\n    borderRadius: 4,\n    borderColor: '#d6d8d9',\n    borderWidth: 1,\n    marginTop: 8,\n  }\n})\n"]},"metadata":{},"sourceType":"module"}