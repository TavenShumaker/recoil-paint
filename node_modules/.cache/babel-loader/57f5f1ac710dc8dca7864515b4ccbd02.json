{"ast":null,"code":"var _jsxFileName = \"/Users/jesusvargas/Documents/GitHub/recoil-paint/src/components/canvas/Selection.js\";\nimport React from 'react';\nimport { View, StyleSheet } from 'react-native-web';\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\nimport ResizeHandler from './ResizeHandler';\nimport { movingItemIdsState, selectedIdsState } from '../../recoil/atoms';\nimport { selectionBoundingBox } from '../../recoil/selectors';\nimport useMoveItems from '../../hooks/useMoveItems';\nexport default function Selection() {\n  const selectedIds = useRecoilValue(selectedIdsState);\n  const selection = useRecoilValue(selectionBoundingBox);\n  const setMovingItemIds = useSetRecoilState(movingItemIdsState);\n  const {\n    onMouseDown\n  } = useMoveItems(({\n    status\n  }) => {\n    if (!selection) {\n      return null;\n    }\n\n    if (status === 'start') {\n      setMovingItemIds(selectedIds);\n    }\n\n    if (status === 'end') {\n      setMovingItemIds([]);\n    }\n  });\n\n  if (!selection) {\n    return null;\n  }\n\n  const {\n    x,\n    y,\n    width,\n    height\n  } = selection;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(View, {\n    style: [styles.selection, {\n      left: x,\n      top: y,\n      width,\n      height\n    }],\n    onMouseDown: onMouseDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ResizeHandler, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n}\nconst styles = StyleSheet.create({\n  selection: {\n    borderWidth: 2,\n    borderStyle: 'dashed',\n    borderColor: 'blue',\n    position: 'absolute',\n    cursor: 'move'\n  }\n});","map":{"version":3,"sources":["/Users/jesusvargas/Documents/GitHub/recoil-paint/src/components/canvas/Selection.js"],"names":["React","View","StyleSheet","useRecoilValue","useSetRecoilState","ResizeHandler","movingItemIdsState","selectedIdsState","selectionBoundingBox","useMoveItems","Selection","selectedIds","selection","setMovingItemIds","onMouseDown","status","x","y","width","height","styles","left","top","create","borderWidth","borderStyle","borderColor","position","cursor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,QAAlD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,QAAqD,oBAArD;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AAEA,eAAe,SAASC,SAAT,GAAqB;AAClC,QAAMC,WAAW,GAAGR,cAAc,CAACI,gBAAD,CAAlC;AACA,QAAMK,SAAS,GAAGT,cAAc,CAACK,oBAAD,CAAhC;AACA,QAAMK,gBAAgB,GAAGT,iBAAiB,CAACE,kBAAD,CAA1C;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAAkBL,YAAY,CAAC,CAAC;AAAEM,IAAAA;AAAF,GAAD,KAAgB;AACnD,QAAI,CAACH,SAAL,EAAgB;AACd,aAAO,IAAP;AACD;;AAED,QAAIG,MAAM,KAAK,OAAf,EAAwB;AACtBF,MAAAA,gBAAgB,CAACF,WAAD,CAAhB;AACD;;AAED,QAAII,MAAM,KAAK,KAAf,EAAsB;AACpBF,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD;AACF,GAZmC,CAApC;;AAcA,MAAI,CAACD,SAAL,EAAgB;AACd,WAAO,IAAP;AACD;;AAED,QAAM;AAAEI,IAAAA,CAAF;AAAKC,IAAAA,CAAL;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA0BP,SAAhC;AAEA,sBACE,uDACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CAACQ,MAAM,CAACR,SAAR,EAAmB;AACxBS,MAAAA,IAAI,EAAEL,CADkB;AAExBM,MAAAA,GAAG,EAAEL,CAFmB;AAGxBC,MAAAA,KAHwB;AAIxBC,MAAAA;AAJwB,KAAnB,CADT;AAOE,IAAA,WAAW,EAAEL,WAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD;AAED,MAAMM,MAAM,GAAGlB,UAAU,CAACqB,MAAX,CAAkB;AAC/BX,EAAAA,SAAS,EAAE;AACTY,IAAAA,WAAW,EAAE,CADJ;AAETC,IAAAA,WAAW,EAAE,QAFJ;AAGTC,IAAAA,WAAW,EAAE,MAHJ;AAITC,IAAAA,QAAQ,EAAE,UAJD;AAKTC,IAAAA,MAAM,EAAE;AALC;AADoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { View, StyleSheet } from 'react-native-web';\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\nimport ResizeHandler from './ResizeHandler';\nimport { movingItemIdsState, selectedIdsState } from '../../recoil/atoms';\nimport { selectionBoundingBox } from '../../recoil/selectors';\nimport useMoveItems from '../../hooks/useMoveItems';\n\nexport default function Selection() {\n  const selectedIds = useRecoilValue(selectedIdsState);\n  const selection = useRecoilValue(selectionBoundingBox);\n  const setMovingItemIds = useSetRecoilState(movingItemIdsState);\n\n  const { onMouseDown } = useMoveItems(({ status }) => {\n    if (!selection) {\n      return null;\n    }\n\n    if (status === 'start') {\n      setMovingItemIds(selectedIds)\n    }\n\n    if (status === 'end') {\n      setMovingItemIds([])\n    }\n  })\n\n  if (!selection) {\n    return null;\n  }\n\n  const { x, y, width, height } = selection;\n\n  return (\n    <>\n      <View\n        style={[styles.selection, {\n          left: x,\n          top: y,\n          width,\n          height\n        }]}\n        onMouseDown={onMouseDown}\n      />\n      <ResizeHandler />\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  selection: {\n    borderWidth: 2,\n    borderStyle: 'dashed',\n    borderColor: 'blue',\n    position: 'absolute',\n    cursor: 'move',\n  },\n})\n"]},"metadata":{},"sourceType":"module"}