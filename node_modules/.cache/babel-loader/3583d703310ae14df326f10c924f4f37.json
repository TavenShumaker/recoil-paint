{"ast":null,"code":"var _jsxFileName = \"/Users/jesusvargas/Documents/GitHub/recoil-paint/src/components/canvas/Canvas.js\";\nimport React, { useRef } from 'react';\nimport { View, StyleSheet } from 'react-native-web';\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\nimport CanvasItem from './CanvasItem';\nimport Selection from './Selection';\nimport CanvasBackground from './CanvasBackground';\nimport { itemIdsState, canvasLayoutState } from '../../recoil/atoms';\nexport default function Canvas() {\n  const ref = useRef();\n  const itemIds = useRecoilValue(itemIdsState);\n  const setLayoutState = useSetRecoilState(canvasLayoutState);\n\n  const onLayout = ({\n    nativeEvent: {\n      layout: {\n        x,\n        y,\n        width,\n        height\n      }\n    }\n  }) => setLayoutState({\n    x,\n    y,\n    width,\n    height\n  });\n\n  return /*#__PURE__*/React.createElement(View, {\n    style: styles.root,\n    ref: ref,\n    onLayout: onLayout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CanvasBackground, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), itemIds.map(id => /*#__PURE__*/React.createElement(CanvasItem, {\n    key: `item-${id}`,\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 28\n    }\n  })), /*#__PURE__*/React.createElement(Selection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  })));\n}\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    backgroundColor: 'white',\n    overflow: 'visible',\n    zIndex: 0\n  },\n  container: {\n    flex: 1\n  },\n  svg: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/jesusvargas/Documents/GitHub/recoil-paint/src/components/canvas/Canvas.js"],"names":["React","useRef","View","StyleSheet","useRecoilValue","useSetRecoilState","CanvasItem","Selection","CanvasBackground","itemIdsState","canvasLayoutState","Canvas","ref","itemIds","setLayoutState","onLayout","nativeEvent","layout","x","y","width","height","styles","root","container","map","id","create","flex","backgroundColor","overflow","zIndex","svg"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,QAAlD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,YAAT,EAAuBC,iBAAvB,QAAgD,oBAAhD;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC/B,QAAMC,GAAG,GAAGX,MAAM,EAAlB;AACA,QAAMY,OAAO,GAAGT,cAAc,CAACK,YAAD,CAA9B;AACA,QAAMK,cAAc,GAAGT,iBAAiB,CAACK,iBAAD,CAAxC;;AAEA,QAAMK,QAAQ,GAAG,CAAC;AAChBC,IAAAA,WAAW,EAAE;AACXC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,CAAF;AAAKC,QAAAA,CAAL;AAAQC,QAAAA,KAAR;AAAeC,QAAAA;AAAf;AADG;AADG,GAAD,KAIXP,cAAc,CAAC;AAAEI,IAAAA,CAAF;AAAKC,IAAAA,CAAL;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAD,CAJpB;;AAMA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAA0B,IAAA,GAAG,EAAEX,GAA/B;AAAoC,IAAA,QAAQ,EAAEG,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGX,OAAO,CAACY,GAAR,CAAYC,EAAE,iBAAI,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAG,QAAOA,EAAG,EAA5B;AAA+B,IAAA,EAAE,EAAEA,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,CAFH,eAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF;AASD;AAED,MAAMJ,MAAM,GAAGnB,UAAU,CAACwB,MAAX,CAAkB;AAC/BJ,EAAAA,IAAI,EAAE;AACJK,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,eAAe,EAAE,OAFb;AAGJC,IAAAA,QAAQ,EAAE,SAHN;AAIJC,IAAAA,MAAM,EAAE;AAJJ,GADyB;AAO/BP,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE;AADG,GAPoB;AAU/BI,EAAAA,GAAG,EAAE;AACHJ,IAAAA,IAAI,EAAE;AADH;AAV0B,CAAlB,CAAf","sourcesContent":["import React, { useRef } from 'react';\nimport { View, StyleSheet } from 'react-native-web';\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\nimport CanvasItem from './CanvasItem';\nimport Selection from './Selection';\nimport CanvasBackground from './CanvasBackground';\nimport { itemIdsState, canvasLayoutState } from '../../recoil/atoms';\n\nexport default function Canvas() {\n  const ref = useRef();\n  const itemIds = useRecoilValue(itemIdsState);\n  const setLayoutState = useSetRecoilState(canvasLayoutState);\n\n  const onLayout = ({\n    nativeEvent: {\n      layout: { x, y, width, height }\n    }\n  }) => setLayoutState({ x, y, width, height });\n\n  return (\n    <View style={styles.root} ref={ref} onLayout={onLayout}>\n      <View style={styles.container}>\n        <CanvasBackground />\n        {itemIds.map(id => <CanvasItem key={`item-${id}`} id={id} />)}\n        <Selection />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    backgroundColor: 'white',\n    overflow: 'visible',\n    zIndex: 0,\n  },\n  container: {\n    flex: 1,\n  },\n  svg: {\n    flex: 1,\n  }\n})\n"]},"metadata":{},"sourceType":"module"}