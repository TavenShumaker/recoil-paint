{"ast":null,"code":"import { useState, useCallback, useEffect } from 'react';\nexport default function useMove(func) {\n  const [isMoving, setIsMoving] = useState(false);\n  const [origin, setOrigin] = useState({\n    clientX: 0,\n    clientY: 0\n  });\n  const [offset, setOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const callback = useCallback((status, isMoving, origin, offset) => {\n    func({\n      status,\n      isMoving,\n      origin,\n      offset\n    });\n  }, [func]);\n  const handleMouseDown = useCallback(({\n    clientX,\n    clientY,\n    metaKey,\n    shiftKey\n  }) => {\n    let origin = {\n      clientX,\n      clientY,\n      metaKey,\n      shiftKey\n    };\n    setIsMoving(true);\n    setOrigin(origin);\n    callback('start', true, origin, offset);\n  }, [callback, offset]);\n  const handleMouseMove = useCallback(({\n    clientX,\n    clientY\n  }) => {\n    if (!isMoving) {\n      return;\n    }\n\n    const offset = {\n      x: clientX - origin.clientX,\n      y: clientY - origin.clientY\n    };\n    setOffset(offset);\n    callback('moving', true, origin, offset);\n  }, [callback, isMoving, origin]);\n  const handleMouseUp = useCallback(() => {\n    if (!isMoving) {\n      return;\n    }\n\n    setIsMoving(false);\n    setOffset({\n      x: 0,\n      y: 0\n    });\n    callback('end', false, origin, offset);\n  }, [callback, isMoving, offset, origin]);\n  useEffect(() => {\n    function addEventListeners() {\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('mouseup', handleMouseUp);\n    }\n\n    function removeEventListeners() {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n    }\n\n    if (isMoving) {\n      addEventListeners();\n    } else {\n      removeEventListeners();\n    }\n\n    return removeEventListeners;\n  }, [handleMouseMove, handleMouseUp, isMoving]);\n  return {\n    onMouseDown: handleMouseDown\n  };\n}","map":{"version":3,"sources":["/Users/jesusvargas/Documents/GitHub/recoil-paint/src/hooks/useMove.js"],"names":["useState","useCallback","useEffect","useMove","func","isMoving","setIsMoving","origin","setOrigin","clientX","clientY","offset","setOffset","x","y","callback","status","handleMouseDown","metaKey","shiftKey","handleMouseMove","handleMouseUp","addEventListeners","window","addEventListener","removeEventListeners","removeEventListener","onMouseDown"],"mappings":"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","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\n\nexport default function useMove(func) {\n  const [isMoving, setIsMoving] = useState(false);\n  const [origin, setOrigin] = useState({ clientX: 0, clientY: 0 });\n  const [offset, setOffset] = useState({ x: 0, y: 0 });\n\n  const callback = useCallback((status, isMoving, origin, offset) => {\n    func({ status, isMoving, origin, offset  });\n  }, [func]);\n\n  const handleMouseDown = useCallback(({ clientX, clientY, metaKey, shiftKey }) => {\n    let origin = { clientX, clientY, metaKey, shiftKey };\n    setIsMoving(true);\n    setOrigin(origin);\n    callback('start', true, origin, offset);\n  }, [callback, offset]);\n\n\n  const handleMouseMove = useCallback(({ clientX, clientY }) => {\n    if (!isMoving) {\n      return;\n    }\n\n    const offset = {\n      x: clientX - origin.clientX,\n      y: clientY - origin.clientY\n    };\n\n    setOffset(offset);\n    callback('moving', true, origin, offset);\n  }, [callback, isMoving, origin]);\n\n  const handleMouseUp = useCallback(() => {\n    if (!isMoving) {\n      return;\n    }\n    setIsMoving(false);\n    setOffset({ x: 0, y: 0 });\n    callback('end', false, origin, offset);\n  }, [callback, isMoving, offset, origin]);\n\n  useEffect(() => {\n\n    function addEventListeners() {\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('mouseup', handleMouseUp);\n    }\n\n    function removeEventListeners() {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n    }\n\n    if (isMoving) {\n      addEventListeners();\n    } else {\n      removeEventListeners();\n    }\n\n    return removeEventListeners;\n  }, [handleMouseMove, handleMouseUp, isMoving]);\n\n  return {\n    onMouseDown: handleMouseDown,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}