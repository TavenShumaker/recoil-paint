{"ast":null,"code":"import memoize from './memoize';\nexport function generateRandomSeries() {\n  // random count from 10 to 20;\n  const count = Math.floor(Math.random() * 10 + 10);\n  const series = [];\n\n  for (let i = 0; i < count; i++) {\n    // random serie value from 0.1 to 1.0\n    series.push(Math.random() * 0.9 + 0.1);\n  }\n\n  return series;\n}\n\nconst delay = t => new Promise(resolve => setTimeout(resolve, t * 1000));\n\nconst statisticsWithId = memoize(id => {\n  const series = generateRandomSeries();\n  return {\n    id,\n    series,\n    width: 28 * series.length + 8,\n    height: 144,\n    label: `Series ${id}`\n  };\n});\nexport async function loadStatistics(id) {\n  // random timeout from 1 to 5 seconds\n  const timeout = Math.random() * 4 + 1;\n  await delay(timeout);\n  return statisticsWithId(id);\n}","map":{"version":3,"sources":["/Users/jesusvargas/Documents/GitHub/recoil-paint/src/utils/statistics.js"],"names":["memoize","generateRandomSeries","count","Math","floor","random","series","i","push","delay","t","Promise","resolve","setTimeout","statisticsWithId","id","width","length","height","label","loadStatistics","timeout"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AAEA,OAAO,SAASC,oBAAT,GAAgC;AACrC;AACA,QAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,EAAjB,GAAuB,EAAlC,CAAd;AACA,QAAMC,MAAM,GAAG,EAAf;;AAEA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACL,KAAhB,EAAuBK,CAAC,EAAxB,EAA4B;AAC1B;AACAD,IAAAA,MAAM,CAACE,IAAP,CAAaL,IAAI,CAACE,MAAL,KAAgB,GAAjB,GAAwB,GAApC;AACD;;AAED,SAAOC,MAAP;AACD;;AAED,MAAMG,KAAK,GAAGC,CAAC,IAAI,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,CAAC,GAAG,IAAd,CAAjC,CAAnB;;AAEA,MAAMI,gBAAgB,GAAGd,OAAO,CAACe,EAAE,IAAI;AACrC,QAAMT,MAAM,GAAGL,oBAAoB,EAAnC;AACA,SAAO;AACLc,IAAAA,EADK;AAELT,IAAAA,MAFK;AAGLU,IAAAA,KAAK,EAAE,KAAKV,MAAM,CAACW,MAAZ,GAAqB,CAHvB;AAILC,IAAAA,MAAM,EAAE,GAJH;AAKLC,IAAAA,KAAK,EAAG,UAASJ,EAAG;AALf,GAAP;AAOD,CAT+B,CAAhC;AAWA,OAAO,eAAeK,cAAf,CAA8BL,EAA9B,EAAkC;AACvC;AACA,QAAMM,OAAO,GAAIlB,IAAI,CAACE,MAAL,KAAgB,CAAjB,GAAsB,CAAtC;AAEA,QAAMI,KAAK,CAACY,OAAD,CAAX;AAEA,SAAOP,gBAAgB,CAACC,EAAD,CAAvB;AACD","sourcesContent":["import memoize from './memoize';\n\nexport function generateRandomSeries() {\n  // random count from 10 to 20;\n  const count = Math.floor((Math.random() * 10) + 10);\n  const series = [];\n\n  for (let i=0; i<count; i++) {\n    // random serie value from 0.1 to 1.0\n    series.push((Math.random() * 0.9) + 0.1);\n  }\n\n  return series;\n}\n\nconst delay = t => new Promise(resolve => setTimeout(resolve, t * 1000));\n\nconst statisticsWithId = memoize(id => {\n  const series = generateRandomSeries();\n  return {\n    id,\n    series,\n    width: 28 * series.length + 8,\n    height: 144,\n    label: `Series ${id}`,\n  }\n});\n\nexport async function loadStatistics(id) {\n  // random timeout from 1 to 5 seconds\n  const timeout = (Math.random() * 4) + 1;\n\n  await delay(timeout);\n\n  return statisticsWithId(id);\n}\n"]},"metadata":{},"sourceType":"module"}